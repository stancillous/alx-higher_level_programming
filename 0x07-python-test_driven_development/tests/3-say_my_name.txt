``3-say_my_name`` code test

Using ``say_my_name`` function

test cases for the function ``say_my_name``.
The function should print "My name is <first name> <last name>".
import function like this:
    
    >>> say_my_name = __import__('3-say_my_name').say_my_name

How to use:

first name argument must be string
 
    >>> say_my_name(23, "Restrepo")
    Traceback (most recent call last):
    TypeError: first_name must be a string

last name argument must be string

    >>> say_my_name("Jose", 334)
    Traceback (most recent call last):
    TypeError: last_name must be a string

first name can't be None

    >>> say_my_name(None, "Restrepo")
    Traceback (most recent call last):
    TypeError: first_name must be a string

If last name is empty print nothing

    >>> say_my_name("Jose")
    My name is Jose 

empty parameters

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

None as unique parameter

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

first parameter as tuple

    >>> say_my_name(("fa", "fd"), "Dairo")
    Traceback (most recent call last):
    TypeError: first_name must be a string

